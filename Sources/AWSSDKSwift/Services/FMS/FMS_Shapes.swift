// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension FMS {

    public enum AccountRoleStatus: String, CustomStringConvertible, Codable {
        case ready = "READY"
        case creating = "CREATING"
        case pendingDeletion = "PENDING_DELETION"
        case deleting = "DELETING"
        case deleted = "DELETED"
        public var description: String { return self.rawValue }
    }

    public struct AssociateAdminAccountRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "AdminAccount", required: true, type: .string)
        ]
        /// The AWS account ID to associate with AWS Firewall Manager as the AWS Firewall Manager administrator account. This can be an AWS Organizations master account or a member account. For more information about AWS Organizations and master accounts, see Managing the AWS Accounts in Your Organization.
        public let adminAccount: String

        public init(adminAccount: String) {
            self.adminAccount = adminAccount
        }

        private enum CodingKeys: String, CodingKey {
            case adminAccount = "AdminAccount"
        }
    }

    public struct ComplianceViolator: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "ResourceId", required: false, type: .string), 
            AWSShapeMember(label: "ResourceType", required: false, type: .string), 
            AWSShapeMember(label: "ViolationReason", required: false, type: .enum)
        ]
        /// The resource ID.
        public let resourceId: String?
        /// The resource type. This is in the format shown in AWS Resource Types Reference. For example: AWS::ElasticLoadBalancingV2::LoadBalancer or AWS::CloudFront::Distribution.
        public let resourceType: String?
        /// The reason that the resource is not protected by the policy.
        public let violationReason: ViolationReason?

        public init(resourceId: String? = nil, resourceType: String? = nil, violationReason: ViolationReason? = nil) {
            self.resourceId = resourceId
            self.resourceType = resourceType
            self.violationReason = violationReason
        }

        private enum CodingKeys: String, CodingKey {
            case resourceId = "ResourceId"
            case resourceType = "ResourceType"
            case violationReason = "ViolationReason"
        }
    }

    public enum CustomerPolicyScopeIdType: String, CustomStringConvertible, Codable {
        case account = "ACCOUNT"
        public var description: String { return self.rawValue }
    }

    public struct DeleteNotificationChannelRequest: AWSShape {

        public init() {
        }

    }

    public struct DeletePolicyRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "DeleteAllPolicyResources", required: false, type: .boolean), 
            AWSShapeMember(label: "PolicyId", required: true, type: .string)
        ]
        /// If True, the request will also perform a clean-up process that will:   Delete rule groups created by AWS Firewall Manager   Remove web ACLs from in-scope resources   Delete web ACLs that contain no rules or rule groups   After the cleanup, in-scope resources will no longer be protected by web ACLs in this policy. Protection of out-of-scope resources will remain unchanged. Scope is determined by tags and accounts associated with the policy. When creating the policy, if you specified that only resources in specific accounts or with specific tags be protected by the policy, those resources are in-scope. All others are out of scope. If you did not specify tags or accounts, all resources are in-scope. 
        public let deleteAllPolicyResources: Bool?
        /// The ID of the policy that you want to delete. PolicyId is returned by PutPolicy and by ListPolicies.
        public let policyId: String

        public init(deleteAllPolicyResources: Bool? = nil, policyId: String) {
            self.deleteAllPolicyResources = deleteAllPolicyResources
            self.policyId = policyId
        }

        private enum CodingKeys: String, CodingKey {
            case deleteAllPolicyResources = "DeleteAllPolicyResources"
            case policyId = "PolicyId"
        }
    }

    public enum DependentServiceName: String, CustomStringConvertible, Codable {
        case awsconfig = "AWSCONFIG"
        case awswaf = "AWSWAF"
        case awsshieldAdvanced = "AWSSHIELD_ADVANCED"
        public var description: String { return self.rawValue }
    }

    public struct DisassociateAdminAccountRequest: AWSShape {

        public init() {
        }

    }

    public struct EvaluationResult: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "ComplianceStatus", required: false, type: .enum), 
            AWSShapeMember(label: "EvaluationLimitExceeded", required: false, type: .boolean), 
            AWSShapeMember(label: "ViolatorCount", required: false, type: .long)
        ]
        /// Describes an AWS account's compliance with the AWS Firewall Manager policy.
        public let complianceStatus: PolicyComplianceStatusType?
        /// Indicates that over 100 resources are non-compliant with the AWS Firewall Manager policy.
        public let evaluationLimitExceeded: Bool?
        /// Number of resources that are non-compliant with the specified policy. A resource is considered non-compliant if it is not associated with the specified policy.
        public let violatorCount: Int64?

        public init(complianceStatus: PolicyComplianceStatusType? = nil, evaluationLimitExceeded: Bool? = nil, violatorCount: Int64? = nil) {
            self.complianceStatus = complianceStatus
            self.evaluationLimitExceeded = evaluationLimitExceeded
            self.violatorCount = violatorCount
        }

        private enum CodingKeys: String, CodingKey {
            case complianceStatus = "ComplianceStatus"
            case evaluationLimitExceeded = "EvaluationLimitExceeded"
            case violatorCount = "ViolatorCount"
        }
    }

    public struct GetAdminAccountRequest: AWSShape {

        public init() {
        }

    }

    public struct GetAdminAccountResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "AdminAccount", required: false, type: .string), 
            AWSShapeMember(label: "RoleStatus", required: false, type: .enum)
        ]
        /// The AWS account that is set as the AWS Firewall Manager administrator.
        public let adminAccount: String?
        /// The status of the AWS account that you set as the AWS Firewall Manager administrator.
        public let roleStatus: AccountRoleStatus?

        public init(adminAccount: String? = nil, roleStatus: AccountRoleStatus? = nil) {
            self.adminAccount = adminAccount
            self.roleStatus = roleStatus
        }

        private enum CodingKeys: String, CodingKey {
            case adminAccount = "AdminAccount"
            case roleStatus = "RoleStatus"
        }
    }

    public struct GetComplianceDetailRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "MemberAccount", required: true, type: .string), 
            AWSShapeMember(label: "PolicyId", required: true, type: .string)
        ]
        /// The AWS account that owns the resources that you want to get the details for.
        public let memberAccount: String
        /// The ID of the policy that you want to get the details for. PolicyId is returned by PutPolicy and by ListPolicies.
        public let policyId: String

        public init(memberAccount: String, policyId: String) {
            self.memberAccount = memberAccount
            self.policyId = policyId
        }

        private enum CodingKeys: String, CodingKey {
            case memberAccount = "MemberAccount"
            case policyId = "PolicyId"
        }
    }

    public struct GetComplianceDetailResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "PolicyComplianceDetail", required: false, type: .structure)
        ]
        /// Information about the resources and the policy that you specified in the GetComplianceDetail request.
        public let policyComplianceDetail: PolicyComplianceDetail?

        public init(policyComplianceDetail: PolicyComplianceDetail? = nil) {
            self.policyComplianceDetail = policyComplianceDetail
        }

        private enum CodingKeys: String, CodingKey {
            case policyComplianceDetail = "PolicyComplianceDetail"
        }
    }

    public struct GetNotificationChannelRequest: AWSShape {

        public init() {
        }

    }

    public struct GetNotificationChannelResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "SnsRoleName", required: false, type: .string), 
            AWSShapeMember(label: "SnsTopicArn", required: false, type: .string)
        ]
        /// The IAM role that is used by AWS Firewall Manager to record activity to SNS.
        public let snsRoleName: String?
        /// The SNS topic that records AWS Firewall Manager activity. 
        public let snsTopicArn: String?

        public init(snsRoleName: String? = nil, snsTopicArn: String? = nil) {
            self.snsRoleName = snsRoleName
            self.snsTopicArn = snsTopicArn
        }

        private enum CodingKeys: String, CodingKey {
            case snsRoleName = "SnsRoleName"
            case snsTopicArn = "SnsTopicArn"
        }
    }

    public struct GetPolicyRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "PolicyId", required: true, type: .string)
        ]
        /// The ID of the AWS Firewall Manager policy that you want the details for.
        public let policyId: String

        public init(policyId: String) {
            self.policyId = policyId
        }

        private enum CodingKeys: String, CodingKey {
            case policyId = "PolicyId"
        }
    }

    public struct GetPolicyResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Policy", required: false, type: .structure), 
            AWSShapeMember(label: "PolicyArn", required: false, type: .string)
        ]
        /// Information about the specified AWS Firewall Manager policy.
        public let policy: Policy?
        /// The Amazon Resource Name (ARN) of the specified policy.
        public let policyArn: String?

        public init(policy: Policy? = nil, policyArn: String? = nil) {
            self.policy = policy
            self.policyArn = policyArn
        }

        private enum CodingKeys: String, CodingKey {
            case policy = "Policy"
            case policyArn = "PolicyArn"
        }
    }

    public struct GetProtectionStatusRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "EndTime", required: false, type: .timestamp), 
            AWSShapeMember(label: "MaxResults", required: false, type: .integer), 
            AWSShapeMember(label: "MemberAccountId", required: false, type: .string), 
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "PolicyId", required: true, type: .string), 
            AWSShapeMember(label: "StartTime", required: false, type: .timestamp)
        ]
        /// The end of the time period to query for the attacks. This is a timestamp type. The sample request above indicates a number type because the default used by AWS Firewall Manager is Unix time in seconds. However, any valid timestamp format is allowed.
        public let endTime: TimeStamp?
        /// Specifies the number of objects that you want AWS Firewall Manager to return for this request. If you have more objects than the number that you specify for MaxResults, the response includes a NextToken value that you can use to get another batch of objects.
        public let maxResults: Int32?
        /// The AWS account that is in scope of the policy that you want to get the details for.
        public let memberAccountId: String?
        /// If you specify a value for MaxResults and you have more objects than the number that you specify for MaxResults, AWS Firewall Manager returns a NextToken value in the response that allows you to list another group of objects. For the second and subsequent GetProtectionStatus requests, specify the value of NextToken from the previous response to get information about another batch of objects.
        public let nextToken: String?
        /// The ID of the policy for which you want to get the attack information.
        public let policyId: String
        /// The start of the time period to query for the attacks. This is a timestamp type. The sample request above indicates a number type because the default used by AWS Firewall Manager is Unix time in seconds. However, any valid timestamp format is allowed.
        public let startTime: TimeStamp?

        public init(endTime: TimeStamp? = nil, maxResults: Int32? = nil, memberAccountId: String? = nil, nextToken: String? = nil, policyId: String, startTime: TimeStamp? = nil) {
            self.endTime = endTime
            self.maxResults = maxResults
            self.memberAccountId = memberAccountId
            self.nextToken = nextToken
            self.policyId = policyId
            self.startTime = startTime
        }

        private enum CodingKeys: String, CodingKey {
            case endTime = "EndTime"
            case maxResults = "MaxResults"
            case memberAccountId = "MemberAccountId"
            case nextToken = "NextToken"
            case policyId = "PolicyId"
            case startTime = "StartTime"
        }
    }

    public struct GetProtectionStatusResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "AdminAccountId", required: false, type: .string), 
            AWSShapeMember(label: "Data", required: false, type: .string), 
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "ServiceType", required: false, type: .enum)
        ]
        /// The ID of the AWS Firewall administrator account for this policy.
        public let adminAccountId: String?
        /// Details about the attack, including the following:   Attack type   Account ID   ARN of the resource attacked   Start time of the attack   End time of the attack (ongoing attacks will not have an end time)   The details are in JSON format. An example is shown in the Examples section below.
        public let data: String?
        /// If you have more objects than the number that you specified for MaxResults in the request, the response includes a NextToken value. To list more objects, submit another GetProtectionStatus request, and specify the NextToken value from the response in the NextToken value in the next request. AWS SDKs provide auto-pagination that identify NextToken in a response and make subsequent request calls automatically on your behalf. However, this feature is not supported by GetProtectionStatus. You must submit subsequent requests with NextToken using your own processes. 
        public let nextToken: String?
        /// The service type that is protected by the policy. Currently, this is always SHIELD_ADVANCED.
        public let serviceType: SecurityServiceType?

        public init(adminAccountId: String? = nil, data: String? = nil, nextToken: String? = nil, serviceType: SecurityServiceType? = nil) {
            self.adminAccountId = adminAccountId
            self.data = data
            self.nextToken = nextToken
            self.serviceType = serviceType
        }

        private enum CodingKeys: String, CodingKey {
            case adminAccountId = "AdminAccountId"
            case data = "Data"
            case nextToken = "NextToken"
            case serviceType = "ServiceType"
        }
    }

    public struct ListComplianceStatusRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "MaxResults", required: false, type: .integer), 
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "PolicyId", required: true, type: .string)
        ]
        /// Specifies the number of PolicyComplianceStatus objects that you want AWS Firewall Manager to return for this request. If you have more PolicyComplianceStatus objects than the number that you specify for MaxResults, the response includes a NextToken value that you can use to get another batch of PolicyComplianceStatus objects.
        public let maxResults: Int32?
        /// If you specify a value for MaxResults and you have more PolicyComplianceStatus objects than the number that you specify for MaxResults, AWS Firewall Manager returns a NextToken value in the response that allows you to list another group of PolicyComplianceStatus objects. For the second and subsequent ListComplianceStatus requests, specify the value of NextToken from the previous response to get information about another batch of PolicyComplianceStatus objects.
        public let nextToken: String?
        /// The ID of the AWS Firewall Manager policy that you want the details for.
        public let policyId: String

        public init(maxResults: Int32? = nil, nextToken: String? = nil, policyId: String) {
            self.maxResults = maxResults
            self.nextToken = nextToken
            self.policyId = policyId
        }

        private enum CodingKeys: String, CodingKey {
            case maxResults = "MaxResults"
            case nextToken = "NextToken"
            case policyId = "PolicyId"
        }
    }

    public struct ListComplianceStatusResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "PolicyComplianceStatusList", required: false, type: .list)
        ]
        /// If you have more PolicyComplianceStatus objects than the number that you specified for MaxResults in the request, the response includes a NextToken value. To list more PolicyComplianceStatus objects, submit another ListComplianceStatus request, and specify the NextToken value from the response in the NextToken value in the next request.
        public let nextToken: String?
        /// An array of PolicyComplianceStatus objects.
        public let policyComplianceStatusList: [PolicyComplianceStatus]?

        public init(nextToken: String? = nil, policyComplianceStatusList: [PolicyComplianceStatus]? = nil) {
            self.nextToken = nextToken
            self.policyComplianceStatusList = policyComplianceStatusList
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "NextToken"
            case policyComplianceStatusList = "PolicyComplianceStatusList"
        }
    }

    public struct ListMemberAccountsRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "MaxResults", required: false, type: .integer), 
            AWSShapeMember(label: "NextToken", required: false, type: .string)
        ]
        /// Specifies the number of member account IDs that you want AWS Firewall Manager to return for this request. If you have more IDs than the number that you specify for MaxResults, the response includes a NextToken value that you can use to get another batch of member account IDs.
        public let maxResults: Int32?
        /// If you specify a value for MaxResults and you have more account IDs than the number that you specify for MaxResults, AWS Firewall Manager returns a NextToken value in the response that allows you to list another group of IDs. For the second and subsequent ListMemberAccountsRequest requests, specify the value of NextToken from the previous response to get information about another batch of member account IDs.
        public let nextToken: String?

        public init(maxResults: Int32? = nil, nextToken: String? = nil) {
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case maxResults = "MaxResults"
            case nextToken = "NextToken"
        }
    }

    public struct ListMemberAccountsResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "MemberAccounts", required: false, type: .list), 
            AWSShapeMember(label: "NextToken", required: false, type: .string)
        ]
        /// An array of account IDs.
        public let memberAccounts: [String]?
        /// If you have more member account IDs than the number that you specified for MaxResults in the request, the response includes a NextToken value. To list more IDs, submit another ListMemberAccounts request, and specify the NextToken value from the response in the NextToken value in the next request.
        public let nextToken: String?

        public init(memberAccounts: [String]? = nil, nextToken: String? = nil) {
            self.memberAccounts = memberAccounts
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case memberAccounts = "MemberAccounts"
            case nextToken = "NextToken"
        }
    }

    public struct ListPoliciesRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "MaxResults", required: false, type: .integer), 
            AWSShapeMember(label: "NextToken", required: false, type: .string)
        ]
        /// Specifies the number of PolicySummary objects that you want AWS Firewall Manager to return for this request. If you have more PolicySummary objects than the number that you specify for MaxResults, the response includes a NextToken value that you can use to get another batch of PolicySummary objects.
        public let maxResults: Int32?
        /// If you specify a value for MaxResults and you have more PolicySummary objects than the number that you specify for MaxResults, AWS Firewall Manager returns a NextToken value in the response that allows you to list another group of PolicySummary objects. For the second and subsequent ListPolicies requests, specify the value of NextToken from the previous response to get information about another batch of PolicySummary objects.
        public let nextToken: String?

        public init(maxResults: Int32? = nil, nextToken: String? = nil) {
            self.maxResults = maxResults
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case maxResults = "MaxResults"
            case nextToken = "NextToken"
        }
    }

    public struct ListPoliciesResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "PolicyList", required: false, type: .list)
        ]
        /// If you have more PolicySummary objects than the number that you specified for MaxResults in the request, the response includes a NextToken value. To list more PolicySummary objects, submit another ListPolicies request, and specify the NextToken value from the response in the NextToken value in the next request.
        public let nextToken: String?
        /// An array of PolicySummary objects.
        public let policyList: [PolicySummary]?

        public init(nextToken: String? = nil, policyList: [PolicySummary]? = nil) {
            self.nextToken = nextToken
            self.policyList = policyList
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "NextToken"
            case policyList = "PolicyList"
        }
    }

    public struct Policy: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "ExcludeMap", required: false, type: .map), 
            AWSShapeMember(label: "ExcludeResourceTags", required: true, type: .boolean), 
            AWSShapeMember(label: "IncludeMap", required: false, type: .map), 
            AWSShapeMember(label: "PolicyId", required: false, type: .string), 
            AWSShapeMember(label: "PolicyName", required: true, type: .string), 
            AWSShapeMember(label: "PolicyUpdateToken", required: false, type: .string), 
            AWSShapeMember(label: "RemediationEnabled", required: true, type: .boolean), 
            AWSShapeMember(label: "ResourceTags", required: false, type: .list), 
            AWSShapeMember(label: "ResourceType", required: true, type: .string), 
            AWSShapeMember(label: "ResourceTypeList", required: false, type: .list), 
            AWSShapeMember(label: "SecurityServicePolicyData", required: true, type: .structure)
        ]
        /// Specifies the AWS account IDs to exclude from the policy. The IncludeMap values are evaluated first, with all the appropriate account IDs added to the policy. Then the accounts listed in ExcludeMap are removed, resulting in the final list of accounts to add to the policy. The key to the map is ACCOUNT. For example, a valid ExcludeMap would be {“ACCOUNT” : [“accountID1”, “accountID2”]}.
        public let excludeMap: [CustomerPolicyScopeIdType: [String]]?
        /// If set to True, resources with the tags that are specified in the ResourceTag array are not protected by the policy. If set to False, and the ResourceTag array is not null, only resources with the specified tags are associated with the policy.
        public let excludeResourceTags: Bool
        /// Specifies the AWS account IDs to include in the policy. If IncludeMap is null, all accounts in the organization in AWS Organizations are included in the policy. If IncludeMap is not null, only values listed in IncludeMap are included in the policy. The key to the map is ACCOUNT. For example, a valid IncludeMap would be {“ACCOUNT” : [“accountID1”, “accountID2”]}.
        public let includeMap: [CustomerPolicyScopeIdType: [String]]?
        /// The ID of the AWS Firewall Manager policy.
        public let policyId: String?
        /// The friendly name of the AWS Firewall Manager policy.
        public let policyName: String
        /// A unique identifier for each update to the policy. When issuing a PutPolicy request, the PolicyUpdateToken in the request must match the PolicyUpdateToken of the current policy version. To get the PolicyUpdateToken of the current policy version, use a GetPolicy request.
        public let policyUpdateToken: String?
        /// Indicates if the policy should be automatically applied to new resources.
        public let remediationEnabled: Bool
        /// An array of ResourceTag objects.
        public let resourceTags: [ResourceTag]?
        /// The type of resource to protect with the policy. This is in the format shown in AWS Resource Types Reference. For example: AWS::ElasticLoadBalancingV2::LoadBalancer or AWS::CloudFront::Distribution.
        public let resourceType: String
        /// An array of ResourceType.
        public let resourceTypeList: [String]?
        /// Details about the security service that is being used to protect the resources.
        public let securityServicePolicyData: SecurityServicePolicyData

        public init(excludeMap: [CustomerPolicyScopeIdType: [String]]? = nil, excludeResourceTags: Bool, includeMap: [CustomerPolicyScopeIdType: [String]]? = nil, policyId: String? = nil, policyName: String, policyUpdateToken: String? = nil, remediationEnabled: Bool, resourceTags: [ResourceTag]? = nil, resourceType: String, resourceTypeList: [String]? = nil, securityServicePolicyData: SecurityServicePolicyData) {
            self.excludeMap = excludeMap
            self.excludeResourceTags = excludeResourceTags
            self.includeMap = includeMap
            self.policyId = policyId
            self.policyName = policyName
            self.policyUpdateToken = policyUpdateToken
            self.remediationEnabled = remediationEnabled
            self.resourceTags = resourceTags
            self.resourceType = resourceType
            self.resourceTypeList = resourceTypeList
            self.securityServicePolicyData = securityServicePolicyData
        }

        private enum CodingKeys: String, CodingKey {
            case excludeMap = "ExcludeMap"
            case excludeResourceTags = "ExcludeResourceTags"
            case includeMap = "IncludeMap"
            case policyId = "PolicyId"
            case policyName = "PolicyName"
            case policyUpdateToken = "PolicyUpdateToken"
            case remediationEnabled = "RemediationEnabled"
            case resourceTags = "ResourceTags"
            case resourceType = "ResourceType"
            case resourceTypeList = "ResourceTypeList"
            case securityServicePolicyData = "SecurityServicePolicyData"
        }
    }

    public struct PolicyComplianceDetail: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "EvaluationLimitExceeded", required: false, type: .boolean), 
            AWSShapeMember(label: "ExpiredAt", required: false, type: .timestamp), 
            AWSShapeMember(label: "IssueInfoMap", required: false, type: .map), 
            AWSShapeMember(label: "MemberAccount", required: false, type: .string), 
            AWSShapeMember(label: "PolicyId", required: false, type: .string), 
            AWSShapeMember(label: "PolicyOwner", required: false, type: .string), 
            AWSShapeMember(label: "Violators", required: false, type: .list)
        ]
        /// Indicates if over 100 resources are non-compliant with the AWS Firewall Manager policy.
        public let evaluationLimitExceeded: Bool?
        /// A time stamp that indicates when the returned information should be considered out-of-date.
        public let expiredAt: TimeStamp?
        /// Details about problems with dependent services, such as AWS WAF or AWS Config, that are causing a resource to be non-compliant. The details include the name of the dependent service and the error message received that indicates the problem with the service.
        public let issueInfoMap: [DependentServiceName: String]?
        /// The AWS account ID.
        public let memberAccount: String?
        /// The ID of the AWS Firewall Manager policy.
        public let policyId: String?
        /// The AWS account that created the AWS Firewall Manager policy.
        public let policyOwner: String?
        /// An array of resources that are not protected by the policy.
        public let violators: [ComplianceViolator]?

        public init(evaluationLimitExceeded: Bool? = nil, expiredAt: TimeStamp? = nil, issueInfoMap: [DependentServiceName: String]? = nil, memberAccount: String? = nil, policyId: String? = nil, policyOwner: String? = nil, violators: [ComplianceViolator]? = nil) {
            self.evaluationLimitExceeded = evaluationLimitExceeded
            self.expiredAt = expiredAt
            self.issueInfoMap = issueInfoMap
            self.memberAccount = memberAccount
            self.policyId = policyId
            self.policyOwner = policyOwner
            self.violators = violators
        }

        private enum CodingKeys: String, CodingKey {
            case evaluationLimitExceeded = "EvaluationLimitExceeded"
            case expiredAt = "ExpiredAt"
            case issueInfoMap = "IssueInfoMap"
            case memberAccount = "MemberAccount"
            case policyId = "PolicyId"
            case policyOwner = "PolicyOwner"
            case violators = "Violators"
        }
    }

    public struct PolicyComplianceStatus: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "EvaluationResults", required: false, type: .list), 
            AWSShapeMember(label: "IssueInfoMap", required: false, type: .map), 
            AWSShapeMember(label: "LastUpdated", required: false, type: .timestamp), 
            AWSShapeMember(label: "MemberAccount", required: false, type: .string), 
            AWSShapeMember(label: "PolicyId", required: false, type: .string), 
            AWSShapeMember(label: "PolicyName", required: false, type: .string), 
            AWSShapeMember(label: "PolicyOwner", required: false, type: .string)
        ]
        /// An array of EvaluationResult objects.
        public let evaluationResults: [EvaluationResult]?
        /// Details about problems with dependent services, such as AWS WAF or AWS Config, that are causing a resource to be non-compliant. The details include the name of the dependent service and the error message received that indicates the problem with the service.
        public let issueInfoMap: [DependentServiceName: String]?
        /// Time stamp of the last update to the EvaluationResult objects.
        public let lastUpdated: TimeStamp?
        /// The member account ID.
        public let memberAccount: String?
        /// The ID of the AWS Firewall Manager policy.
        public let policyId: String?
        /// The friendly name of the AWS Firewall Manager policy.
        public let policyName: String?
        /// The AWS account that created the AWS Firewall Manager policy.
        public let policyOwner: String?

        public init(evaluationResults: [EvaluationResult]? = nil, issueInfoMap: [DependentServiceName: String]? = nil, lastUpdated: TimeStamp? = nil, memberAccount: String? = nil, policyId: String? = nil, policyName: String? = nil, policyOwner: String? = nil) {
            self.evaluationResults = evaluationResults
            self.issueInfoMap = issueInfoMap
            self.lastUpdated = lastUpdated
            self.memberAccount = memberAccount
            self.policyId = policyId
            self.policyName = policyName
            self.policyOwner = policyOwner
        }

        private enum CodingKeys: String, CodingKey {
            case evaluationResults = "EvaluationResults"
            case issueInfoMap = "IssueInfoMap"
            case lastUpdated = "LastUpdated"
            case memberAccount = "MemberAccount"
            case policyId = "PolicyId"
            case policyName = "PolicyName"
            case policyOwner = "PolicyOwner"
        }
    }

    public enum PolicyComplianceStatusType: String, CustomStringConvertible, Codable {
        case compliant = "COMPLIANT"
        case nonCompliant = "NON_COMPLIANT"
        public var description: String { return self.rawValue }
    }

    public struct PolicySummary: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "PolicyArn", required: false, type: .string), 
            AWSShapeMember(label: "PolicyId", required: false, type: .string), 
            AWSShapeMember(label: "PolicyName", required: false, type: .string), 
            AWSShapeMember(label: "RemediationEnabled", required: false, type: .boolean), 
            AWSShapeMember(label: "ResourceType", required: false, type: .string), 
            AWSShapeMember(label: "SecurityServiceType", required: false, type: .enum)
        ]
        /// The Amazon Resource Name (ARN) of the specified policy.
        public let policyArn: String?
        /// The ID of the specified policy.
        public let policyId: String?
        /// The friendly name of the specified policy.
        public let policyName: String?
        /// Indicates if the policy should be automatically applied to new resources.
        public let remediationEnabled: Bool?
        /// The type of resource to protect with the policy. This is in the format shown in AWS Resource Types Reference. For example: AWS::ElasticLoadBalancingV2::LoadBalancer or AWS::CloudFront::Distribution.
        public let resourceType: String?
        /// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either a WAF policy or Shield Advanced policy.
        public let securityServiceType: SecurityServiceType?

        public init(policyArn: String? = nil, policyId: String? = nil, policyName: String? = nil, remediationEnabled: Bool? = nil, resourceType: String? = nil, securityServiceType: SecurityServiceType? = nil) {
            self.policyArn = policyArn
            self.policyId = policyId
            self.policyName = policyName
            self.remediationEnabled = remediationEnabled
            self.resourceType = resourceType
            self.securityServiceType = securityServiceType
        }

        private enum CodingKeys: String, CodingKey {
            case policyArn = "PolicyArn"
            case policyId = "PolicyId"
            case policyName = "PolicyName"
            case remediationEnabled = "RemediationEnabled"
            case resourceType = "ResourceType"
            case securityServiceType = "SecurityServiceType"
        }
    }

    public struct PutNotificationChannelRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "SnsRoleName", required: true, type: .string), 
            AWSShapeMember(label: "SnsTopicArn", required: true, type: .string)
        ]
        /// The Amazon Resource Name (ARN) of the IAM role that allows Amazon SNS to record AWS Firewall Manager activity. 
        public let snsRoleName: String
        /// The Amazon Resource Name (ARN) of the SNS topic that collects notifications from AWS Firewall Manager.
        public let snsTopicArn: String

        public init(snsRoleName: String, snsTopicArn: String) {
            self.snsRoleName = snsRoleName
            self.snsTopicArn = snsTopicArn
        }

        private enum CodingKeys: String, CodingKey {
            case snsRoleName = "SnsRoleName"
            case snsTopicArn = "SnsTopicArn"
        }
    }

    public struct PutPolicyRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Policy", required: true, type: .structure)
        ]
        /// The details of the AWS Firewall Manager policy to be created.
        public let policy: Policy

        public init(policy: Policy) {
            self.policy = policy
        }

        private enum CodingKeys: String, CodingKey {
            case policy = "Policy"
        }
    }

    public struct PutPolicyResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Policy", required: false, type: .structure), 
            AWSShapeMember(label: "PolicyArn", required: false, type: .string)
        ]
        /// The details of the AWS Firewall Manager policy that was created.
        public let policy: Policy?
        /// The Amazon Resource Name (ARN) of the policy that was created.
        public let policyArn: String?

        public init(policy: Policy? = nil, policyArn: String? = nil) {
            self.policy = policy
            self.policyArn = policyArn
        }

        private enum CodingKeys: String, CodingKey {
            case policy = "Policy"
            case policyArn = "PolicyArn"
        }
    }

    public struct ResourceTag: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Key", required: true, type: .string), 
            AWSShapeMember(label: "Value", required: false, type: .string)
        ]
        /// The resource tag key.
        public let key: String
        /// The resource tag value.
        public let value: String?

        public init(key: String, value: String? = nil) {
            self.key = key
            self.value = value
        }

        private enum CodingKeys: String, CodingKey {
            case key = "Key"
            case value = "Value"
        }
    }

    public struct SecurityServicePolicyData: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "ManagedServiceData", required: false, type: .string), 
            AWSShapeMember(label: "Type", required: true, type: .enum)
        ]
        /// Details about the service. This contains WAF data in JSON format, as shown in the following example:  ManagedServiceData": "{\"type\": \"WAF\", \"ruleGroups\": [{\"id\": \"12345678-1bcd-9012-efga-0987654321ab\", \"overrideAction\" : {\"type\": \"COUNT\"}}], \"defaultAction\": {\"type\": \"BLOCK\"}}  If this is a Shield Advanced policy, this string will be empty.
        public let managedServiceData: String?
        /// The service that the policy is using to protect the resources. This specifies the type of policy that is created, either a WAF policy or Shield Advanced policy.
        public let `type`: SecurityServiceType

        public init(managedServiceData: String? = nil, type: SecurityServiceType) {
            self.managedServiceData = managedServiceData
            self.`type` = `type`
        }

        private enum CodingKeys: String, CodingKey {
            case managedServiceData = "ManagedServiceData"
            case `type` = "Type"
        }
    }

    public enum SecurityServiceType: String, CustomStringConvertible, Codable {
        case waf = "WAF"
        case shieldAdvanced = "SHIELD_ADVANCED"
        public var description: String { return self.rawValue }
    }

    public enum ViolationReason: String, CustomStringConvertible, Codable {
        case webAclMissingRuleGroup = "WEB_ACL_MISSING_RULE_GROUP"
        case resourceMissingWebAcl = "RESOURCE_MISSING_WEB_ACL"
        case resourceIncorrectWebAcl = "RESOURCE_INCORRECT_WEB_ACL"
        case resourceMissingShieldProtection = "RESOURCE_MISSING_SHIELD_PROTECTION"
        public var description: String { return self.rawValue }
    }
}
