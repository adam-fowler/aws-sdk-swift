// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import AWSSDKSwiftCore

/// Error enum for SageMaker
public enum SageMakerErrorType: AWSErrorType {
    case resourceInUse(message: String?)
    case resourceLimitExceeded(message: String?)
    case resourceNotFound(message: String?)
}

extension SageMakerErrorType {
    public init?(errorCode: String, message: String?){
        var errorCode = errorCode
        if let index = errorCode.index(of: "#") {
            errorCode = String(errorCode[errorCode.index(index, offsetBy: 1)...])
        }
        switch errorCode {
        case "ResourceInUse":
            self = .resourceInUse(message: message)
        case "ResourceLimitExceeded":
            self = .resourceLimitExceeded(message: message)
        case "ResourceNotFound":
            self = .resourceNotFound(message: message)
        default:
            return nil
        }
    }
}

extension SageMakerErrorType : CustomStringConvertible {
    public var description : String {
        switch self {
        case .resourceInUse(let message):
            return "ResourceInUse: \(message ?? "")"
        case .resourceLimitExceeded(let message):
            return "ResourceLimitExceeded: \(message ?? "")"
        case .resourceNotFound(let message):
            return "ResourceNotFound: \(message ?? "")"
        }
    }
}
